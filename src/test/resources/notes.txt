NOTES REASONING ON DECISIONS MADE:

Design decisions
-----------------
- I distinguished 2 ways of implementing the storage of the orders. One would be to create
separate data structures for BUY and SELL orders and the other would be to use just one unified storage.
I think its easier to work with 1 data structure than with multiple.

Testing style decisions
-----------------------
- Im a big fan of BDD style in code and tests, I tried to be careful in the namings of my methods and
variables, to be as more expressive as possible. At the same time I didn't want to hide relevant data
from the tests, that is why I decided to just wrap the givens BDD style but leaving the whens and the
thens inlined(just matter of taste).

Business decisions
-------------------
- The only doubt/assumption I had in what regards to the business requirements was the merging of
orders that have same price but are of different type. In this case, I put myself in the shoes of the
end user looking an at screen where he/she would see on one side BUY orders and in the other side SELL
orders, therefore they should not be merged. With this assumption in mind I did write a test to document it as a requirement(perhaps in reality
I would ask a business analyst), this test is shouldNotMergeOrdersOfSamePriceForDifferentOrderType()